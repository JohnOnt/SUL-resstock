name: ci

on:
  push:
    branches: [ master, develop ]
  pull_request:
    types: [ synchronize, opened ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker://nrel/openstudio:flex-2
    steps:
      - name: Show environment
        run: |
          bundle -v
          ruby -v

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install gems
        run: |
          rm -f Gemfile.lock && bundle install

      - name: Run integrity checks for all projects
        run: |
          rake unit_tests:project_integrity_checks

      - name: Run all integrity check unit tests
        run: |
          rake unit_tests:integrity_check_tests

      - name: Run all measure tests
        run: |
          rake unit_tests:measure_tests

      - name: Run all analysis tests
        run: |
          rake workflow:analysis_tests

      - name: Upload feature samples
        uses: actions/upload-artifact@v2
        with:
          path: resources/buildstock.csv
          name: samples

  bsb:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Show environment
        run: |
          ruby -v
          python -v

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Run buildstockbatch
        run: |
          pip install git+https://github.com/NREL/buildstockbatch.git@restructure-v3-flex
          
          echo "project_national/flex_test.yml"
          buildstock_docker project_national/flex_test.yml
          
          buildstock_docker project_testing/testing_baseline.yml
          buildstock_docker project_national/national_baseline.yml
          
          buildstock_docker project_testing/testing_upgrades.yml
          buildstock_docker project_national/national_upgrades.yml

      - name: Process results
        run: |
          gunzip -v project_national/national_flex/results_csvs/results_up00.csv.gz
          mv project_national/national_flex/results_csvs/results_up00.csv project_national/national_flex.csv          
          
          gunzip -v project_national/national_baseline/results_csvs/results_up00.csv.gz
          mv project_national/national_baseline/results_csvs/results_up00.csv project_national/national_baseline.csv
          
          gunzip -v project_testing/testing_baseline/results_csvs/results_up00.csv.gz
          mv project_testing/testing_baseline/results_csvs/results_up00.csv project_testing/testing_baseline.csv
          
          pip install pandas
          python test/util.py

      - name: Upload flex integration results
        uses: actions/upload-artifact@v2
        with:
          path: project_national/national_flex.csv
          name: flex-results

      - name: Upload integration results
        uses: actions/upload-artifact@v2
        with:
          path: baseline/results
          name: results

  compare-results:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: bsb
    steps:
      - name: Show environment
        run: |
          ruby -v
          python -v

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Upload base samples and results
        uses: actions/upload-artifact@v2
        with:
          path: test/test_samples_osw/base
          name: base

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Download base samples and results
        uses: actions/download-artifact@v2
        with:
          path: |
            base
          name: base

      - name: Download feature samples
        uses: actions/download-artifact@v2
        with:
          path: |
            samples
          name: samples

      - name: Download feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: results

      - name: Compare samples and results
        run: |
          cp -r base/*.csv test/test_samples_osw/base
          mkdir test/test_samples_osw/results
          cp -r samples/buildstock*.csv test/test_samples_osw/results
          cp -r results/results* test/test_samples_osw/results
          
          pip install numpy
          pip install pandas
          pip install plotly
          pip install kaleido
          
          python test/compare.py -a samples
          
          python test/compare.py -m feature
          
          python test/compare.py -a results -b test/test_samples_osw/base/map -f test/test_samples_osw/results/map
          python test/compare.py -a results -b test/test_samples_osw/base/map -f test/test_samples_osw/results/map -af sum -ac build_existing_model.geometry_building_type_recs -x results_output_building_type_sum.csv
          
          python test/compare.py -a visualize -b test/test_samples_osw/base/map -f test/test_samples_osw/results/map -dc build_existing_model.geometry_building_type_recs -x results_output_building_type.html
          python test/compare.py -a visualize -b test/test_samples_osw/base/map -f test/test_samples_osw/results/map -dc build_existing_model.geometry_foundation_type -x results_output_foundation_type.html
          python test/compare.py -a visualize -b test/test_samples_osw/base/map -f test/test_samples_osw/results/map -dc build_existing_model.county -x results_output_county.html
          python test/compare.py -a visualize -b test/test_samples_osw/base/map -f test/test_samples_osw/results/map -dc build_existing_model.geometry_building_type_recs -ac build_existing_model.county -af sum -x results_output_county_sum.html

      - name: Upload comparisons
        uses: actions/upload-artifact@v2
        with:
          path: test/test_samples_osw/comparisons
          name: comparisons

      - name: Upload base map
        uses: actions/upload-artifact@v2
        with:
          path: test/test_samples_osw/base/map
          name: base_map

      - name: Upload feature map
        uses: actions/upload-artifact@v2
        with:
          path: test/test_samples_osw/results/map
          name: results_map

  update-results:
    runs-on: ubuntu-latest
    needs: bsb
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Download feature samples
        uses: actions/download-artifact@v2
        with:
          path: |
            samples
          name: samples

      - name: Download feature results
        uses: actions/download-artifact@v2
        with:
          path: |
            results
          name: results

      - name: Commit latest results
        shell: bash        
        run: |
          branch_name="${{ github.head_ref }}"
          git pull origin $branch_name
          cp -r samples/buildstock*.csv test/test_samples_osw/base
          cp -r results/results*.csv test/test_samples_osw/base
          git add test/test_samples_osw/base
          git status
          if [[ $(git diff --cached --exit-code) ]]; then
            git config --global user.email "github-action@users.noreply.github.com"
            git config --global user.name "GitHub Action"
            git commit -m "Latest results."
            echo "Pushing to branch: $branch_name"
            git push -u origin $branch_name
          fi
